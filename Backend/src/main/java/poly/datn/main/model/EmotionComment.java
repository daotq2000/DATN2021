package poly.datn.main.model;
// Generated Sep 20, 2020 1:19:24 PM by Hibernate Tools 4.0.1.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * EmotionComment generated by hbm2java
 */
@Entity
@Table(name = "emotion_comment", catalog = "graduate")
public class EmotionComment implements java.io.Serializable {

	private Long id;
	private Comment commentByUserId;
	private Comment commentByCommentId;
	private Comment commentByPostId;
	private long likes;
	private long dislike;

	public EmotionComment() {
	}

	public EmotionComment(Comment commentByUserId, Comment commentByCommentId, Comment commentByPostId, long likes,
			long dislike) {
		this.commentByUserId = commentByUserId;
		this.commentByCommentId = commentByCommentId;
		this.commentByPostId = commentByPostId;
		this.likes = likes;
		this.dislike = dislike;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Comment getCommentByUserId() {
		return this.commentByUserId;
	}

	public void setCommentByUserId(Comment commentByUserId) {
		this.commentByUserId = commentByUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "comment_id", nullable = false)
	public Comment getCommentByCommentId() {
		return this.commentByCommentId;
	}

	public void setCommentByCommentId(Comment commentByCommentId) {
		this.commentByCommentId = commentByCommentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "post_id", nullable = false)
	public Comment getCommentByPostId() {
		return this.commentByPostId;
	}

	public void setCommentByPostId(Comment commentByPostId) {
		this.commentByPostId = commentByPostId;
	}

	@Column(name = "likes", nullable = false)
	public long getLikes() {
		return this.likes;
	}

	public void setLikes(long likes) {
		this.likes = likes;
	}

	@Column(name = "dislike", nullable = false)
	public long getDislike() {
		return this.dislike;
	}

	public void setDislike(long dislike) {
		this.dislike = dislike;
	}

}
