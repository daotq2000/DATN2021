package poly.datn.main.model;
// Generated Sep 20, 2020 1:19:24 PM by Hibernate Tools 4.0.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "graduate")
public class User implements java.io.Serializable {

	private Long id;
	private UserRole userRole;
	private City city;
	private String fullname;
	private String skill;
	private String email;
	private int password;
	private boolean isActive;
	private String tagId;
	private Set<Answer> answers = new HashSet<Answer>(0);
	private Set<Post> posts = new HashSet<Post>(0);
	private Set<Point> points = new HashSet<Point>(0);

	public User() {
	}

	public User(UserRole userRole, City city, String email, int password, boolean isActive, String tagId) {
		this.userRole = userRole;
		this.city = city;
		this.email = email;
		this.password = password;
		this.isActive = isActive;
		this.tagId = tagId;
	}

	public User(UserRole userRole, City city, String fullname, String skill, String email, int password,
			boolean isActive, String tagId, Set<Answer> answers, Set<Post> posts, Set<Point> points) {
		this.userRole = userRole;
		this.city = city;
		this.fullname = fullname;
		this.skill = skill;
		this.email = email;
		this.password = password;
		this.isActive = isActive;
		this.tagId = tagId;
		this.answers = answers;
		this.posts = posts;
		this.points = points;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_role", nullable = false)
	public UserRole getUserRole() {
		return this.userRole;
	}

	public void setUserRole(UserRole userRole) {
		this.userRole = userRole;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "city_id", nullable = false)
	public City getCity() {
		return this.city;
	}

	public void setCity(City city) {
		this.city = city;
	}

	@Column(name = "fullname", length = 50)
	public String getFullname() {
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@Column(name = "skill", length = 50)
	public String getSkill() {
		return this.skill;
	}

	public void setSkill(String skill) {
		this.skill = skill;
	}

	@Column(name = "email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false)
	public int getPassword() {
		return this.password;
	}

	public void setPassword(int password) {
		this.password = password;
	}

	@Column(name = "isActive", nullable = false)
	public boolean isIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "tag_id", nullable = false)
	public String getTagId() {
		return this.tagId;
	}

	public void setTagId(String tagId) {
		this.tagId = tagId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Answer> getAnswers() {
		return this.answers;
	}

	public void setAnswers(Set<Answer> answers) {
		this.answers = answers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Post> getPosts() {
		return this.posts;
	}

	public void setPosts(Set<Post> posts) {
		this.posts = posts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Point> getPoints() {
		return this.points;
	}

	public void setPoints(Set<Point> points) {
		this.points = points;
	}

}
