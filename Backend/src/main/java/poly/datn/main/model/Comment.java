package poly.datn.main.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Comment generated by hbm2java
 */
@Entity
@Table(name = "comment", catalog = "graduate")
public class Comment implements java.io.Serializable {

	private Long id;
	private Answer answerByUserId;
	private Answer answerByPostId;
	private String content;
	private Date createAt;
	private Date updateAt;
	private Set<EmotionComment> emotionCommentsForPostId = new HashSet<EmotionComment>(0);
	private Set<EmotionComment> emotionCommentsForUserId = new HashSet<EmotionComment>(0);
	private Set<EmotionComment> emotionCommentsForCommentId = new HashSet<EmotionComment>(0);

	public Comment() {
	}

	public Comment(Answer answerByUserId, Answer answerByPostId, String content, Date createAt, Date updateAt) {
		this.answerByUserId = answerByUserId;
		this.answerByPostId = answerByPostId;
		this.content = content;
		this.createAt = createAt;
		this.updateAt = updateAt;
	}

	public Comment(Answer answerByUserId, Answer answerByPostId, String content, Date createAt, Date updateAt,
			Set<EmotionComment> emotionCommentsForPostId, Set<EmotionComment> emotionCommentsForUserId,
			Set<EmotionComment> emotionCommentsForCommentId) {
		this.answerByUserId = answerByUserId;
		this.answerByPostId = answerByPostId;
		this.content = content;
		this.createAt = createAt;
		this.updateAt = updateAt;
		this.emotionCommentsForPostId = emotionCommentsForPostId;
		this.emotionCommentsForUserId = emotionCommentsForUserId;
		this.emotionCommentsForCommentId = emotionCommentsForCommentId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public Answer getAnswerByUserId() {
		return this.answerByUserId;
	}

	public void setAnswerByUserId(Answer answerByUserId) {
		this.answerByUserId = answerByUserId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "post_id", nullable = false)
	public Answer getAnswerByPostId() {
		return this.answerByPostId;
	}

	public void setAnswerByPostId(Answer answerByPostId) {
		this.answerByPostId = answerByPostId;
	}

	@Column(name = "content", nullable = false, length = 65535)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_at", nullable = false, length = 19)
	public Date getCreateAt() {
		return this.createAt;
	}

	public void setCreateAt(Date createAt) {
		this.createAt = createAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_at", nullable = false, length = 19)
	public Date getUpdateAt() {
		return this.updateAt;
	}

	public void setUpdateAt(Date updateAt) {
		this.updateAt = updateAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commentByPostId")
	public Set<EmotionComment> getEmotionCommentsForPostId() {
		return this.emotionCommentsForPostId;
	}

	public void setEmotionCommentsForPostId(Set<EmotionComment> emotionCommentsForPostId) {
		this.emotionCommentsForPostId = emotionCommentsForPostId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commentByUserId")
	public Set<EmotionComment> getEmotionCommentsForUserId() {
		return this.emotionCommentsForUserId;
	}

	public void setEmotionCommentsForUserId(Set<EmotionComment> emotionCommentsForUserId) {
		this.emotionCommentsForUserId = emotionCommentsForUserId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commentByCommentId")
	public Set<EmotionComment> getEmotionCommentsForCommentId() {
		return this.emotionCommentsForCommentId;
	}

	public void setEmotionCommentsForCommentId(Set<EmotionComment> emotionCommentsForCommentId) {
		this.emotionCommentsForCommentId = emotionCommentsForCommentId;
	}

}
