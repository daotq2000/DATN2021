package com.sapo.qlsc.repository.impl;

import com.sapo.qlsc.entity.User;
import com.sapo.qlsc.repository.UserRepositoryCustom;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Map;

@Repository
public class UserRepositoryCustomImpl implements UserRepositoryCustom {

    @Autowired
    private NamedParameterJdbcTemplate jdbcTemplate;

    @Override
<<<<<<< HEAD
    public List<Map<String, Object>> getTotalMaintenanceCardByRepairman(int page, int size,String key) {
        String sql = "select count(maintenance_cards.id) as numberMaintenanceCards, users.id as user from users \n" +
                "left join maintenance_cards on users.id = maintenance_cards.repairman_id \n" +
                "where users.role = 2 \n" +
                "and users.status = 1 \n" +
=======
    public List<Map<String, Object>> getTotalWarrantyCardByRepairman(int page, int size,String key) {
        String sql = "select count(maintenance_cards.id) as numberMaintenanceCards, users.id as user from users \n" +
                "left join maintenance_cards on users.id = maintenance_cards.repairman_id \n" +
                "where users.role = 2 \n" +
>>>>>>> dao
                "and (users.code like :key \n" +
                "or  users.email like :key \n" +
                "or  users.full_name like :key \n" +
                "or  users.phone_number like :key ) \n" +
                "group by users.id " +
                "order by count(maintenance_cards.id) "+
                "limit :size offset :page";
        SqlParameterSource sqlParameterSource = new MapSqlParameterSource()
                .addValue("size",size)
                .addValue("page",page)
                .addValue("key",key);
        return jdbcTemplate.queryForList(sql,sqlParameterSource);
    }

    @Override
<<<<<<< HEAD
    public int countTotalElements(String key) {
        String sql = "SELECT count(*) as total FROM users where users.status = 1 and users.role = 2 "+
                "and (users.code like :key \n" +
                "or  users.email like :key \n" +
                "or  users.full_name like :key \n" +
                "or  users.phone_number like :key ) \n";
        SqlParameterSource sqlParameterSource = new MapSqlParameterSource()
                .addValue("key",key);
        return jdbcTemplate.queryForObject(sql,sqlParameterSource,(rs,rowNum)->{
            return rs.getInt("total");
        });

=======
    public Map<String,Object> getListUser(int page, int size, String key) {
        return null;
>>>>>>> dao
    }
}
