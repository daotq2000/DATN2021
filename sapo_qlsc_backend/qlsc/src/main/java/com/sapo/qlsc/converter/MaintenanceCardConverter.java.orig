package com.sapo.qlsc.converter;

<<<<<<< HEAD
import com.sapo.qlsc.dto.*;
import com.sapo.qlsc.entity.*;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.ui.ModelMap;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

@Component
public class MaintenanceCardConverter {

=======
import com.sapo.qlsc.dto.CustomerDTO;
import com.sapo.qlsc.dto.MaintenanceCardDTO;
import com.sapo.qlsc.dto.UserDTO;
import com.sapo.qlsc.entity.MaintenanceCard;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
@Component
public class MaintenanceCardConverter {
>>>>>>> dao
    @Autowired
    UserConverter userConverter;
    @Autowired
    CustomerConverter customerConverter;

    public MaintenanceCardDTO convertToDTO(MaintenanceCard maintenanceCard) {
        MaintenanceCardDTO maintenanceCardDTO = new MaintenanceCardDTO();
        maintenanceCardDTO.setCode(maintenanceCard.getCode());
        maintenanceCardDTO.setPlatesNumber(maintenanceCard.getPlatesNumber());
        if(maintenanceCard.getCustomer() != null) {
            maintenanceCardDTO.setCustomer(customerConverter.convertCustomerDTO(maintenanceCard.getCustomer()));
        }
        if(maintenanceCard.getRepairman() != null) {
            maintenanceCardDTO.setRepairman(userConverter.convertToDTO(maintenanceCard.getRepairman()));
        }
        maintenanceCardDTO.setDescription(maintenanceCard.getDescription());
        maintenanceCard.setReturnDate(maintenanceCard.getReturnDate());//
        maintenanceCardDTO.setPrice(maintenanceCard.getPrice());
<<<<<<< HEAD
        maintenanceCardDTO.setReturnDate(maintenanceCard.getReturnDate());
=======
>>>>>>> dao
        maintenanceCardDTO.setWorkStatus(maintenanceCard.getWorkStatus());
        maintenanceCardDTO.setPayStatus(maintenanceCard.getPayStatus());
        maintenanceCardDTO.setModel(maintenanceCard.getModel());
        maintenanceCardDTO.setColor(maintenanceCard.getColor());
        maintenanceCardDTO.setCoordinator(userConverter.convertToDTO(maintenanceCard.getCoordinator()));
        maintenanceCardDTO.setId(maintenanceCard.getId());
<<<<<<< HEAD
        maintenanceCardDTO.setCreatedDate(maintenanceCard.getCreatedDate());
        return maintenanceCardDTO;
    }
    public MaintenanceCard convertToEntity(MaintenanceCardDTO maintenanceCardDTO) {
        ModelMapper modelMapper = new ModelMapper();
        MaintenanceCard maintenance= modelMapper.map(maintenanceCardDTO,MaintenanceCard.class);
=======
        return maintenanceCardDTO;
    }
    public MaintenanceCard convertToEntity(MaintenanceCardDTO maintenanceCard) {
        MaintenanceCard maintenance= new MaintenanceCard();
        maintenance.setCode(maintenanceCard.getCode());
        maintenance.setPlatesNumber(maintenanceCard.getPlatesNumber());
        maintenance.setCustomer(customerConverter.convertToEntity(maintenanceCard.getCustomer()));
        maintenance.setRepairman(userConverter.convertToEntity(maintenanceCard.getRepairman()));

        maintenance.setDescription(maintenanceCard.getDescription());
        maintenance.setReturnDate(maintenanceCard.getReturnDate());//
        maintenance.setPrice(maintenanceCard.getPrice());
        maintenance.setWorkStatus(maintenanceCard.getWorkStatus());
        maintenance.setPayStatus(maintenanceCard.getPayStatus());
        maintenance.setModel(maintenanceCard.getModel());
        maintenance.setColor(maintenanceCard.getColor());

>>>>>>> dao
        return maintenance;
    }
    public List<MaintenanceCardDTO> convertToMaintenanceCardDTOList(List<MaintenanceCard> maintenanceCardList){
        List<MaintenanceCardDTO> list = new ArrayList<>();
        for (MaintenanceCard maintenanceCard: maintenanceCardList
<<<<<<< HEAD
        ) {
            list.add(convertToDTO(maintenanceCard));
=======
             ) {
                list.add(convertToDTO(maintenanceCard));
>>>>>>> dao
        }

        return list;
    }
    public List<MaintenanceCardDTO> convertToCoordinatorWarrantyCardsDTO(List<MaintenanceCard> coordinatorWarrantyCardsList){
        List<MaintenanceCardDTO> list = new ArrayList<>();
        coordinatorWarrantyCardsList.forEach(maintenanceCard -> {
            System.out.println(maintenanceCard);
            list.add(convertToDTO(maintenanceCard));

        });
        return list;
    }

    public List<MaintenanceCard> convertToMaintenanceCardDTOListEntity(List<MaintenanceCardDTO> maintenanceCardList){
        List<MaintenanceCard> list = new ArrayList<>();
        maintenanceCardList.forEach(maintenanceCard ->{
            System.out.println(maintenanceCard);
            list.add(convertToEntity(maintenanceCard));
        });
        System.out.println("convertToMaintenanceCardDTOListEntity Size: "+list.size());
        return list;
    }
    public List<MaintenanceCard> convertToCoordinatorWarrantyCardsDTOEntity(List<MaintenanceCardDTO> coordinatorWarrantyCardsList){
        List<MaintenanceCard> list = new ArrayList<>();
        coordinatorWarrantyCardsList.forEach(maintenanceCard -> list.add(convertToEntity(maintenanceCard)));
        return list;
    }
<<<<<<< HEAD
    public MaintenanceCardDTO convertAllToDTO(MaintenanceCard maintenanceCard) {
        MaintenanceCardDTO maintenanceCardDTO = convertToDTO(maintenanceCard);
        List<MaintenanceCardDetailDTO> maintenanceCardDetailDTOS = new ArrayList<>();
        for (MaintenanceCardDetail maintenanceCardDetail: maintenanceCard.getMaintenanceCardDetails()) {
            MaintenanceCardDetailDTO maintenanceCardDetailDTO = new MaintenanceCardDetailDTO();
            maintenanceCardDetailDTO.setPrice(maintenanceCardDetail.getPrice());
            ProductDTO productDTO = new ProductDTO();
            Product product = maintenanceCardDetail.getProduct();
            productDTO.setCode(product.getCode());
            productDTO.setName(product.getName());
            productDTO.setPricePerUnit(product.getPricePerUnit());
            productDTO.setType(product.getType());
            if(product.getType() == 1){
                productDTO.setQuantity(product.getQuantity());
            }
            productDTO.setId(product.getId());
            maintenanceCardDetailDTO.setProduct(productDTO);
            maintenanceCardDetailDTO.setQuantity(maintenanceCardDetail.getQuantity());
            maintenanceCardDetailDTO.setStatus(maintenanceCardDetail.getStatus());
            maintenanceCardDetailDTO.setCreatedDate(maintenanceCardDetail.getCreatedDate());
            maintenanceCardDetailDTO.setId(maintenanceCardDetail.getId());
            maintenanceCardDetailDTO.setModifiedDate(maintenanceCardDetail.getModifiedDate());
            maintenanceCardDetailDTOS.add(maintenanceCardDetailDTO);
        }
        List<PaymentHistoryDTO> paymentHistoryDTOS = new ArrayList<>();
        for(PaymentHistory paymentHistory : maintenanceCard.getPaymentHistories()){
            PaymentHistoryDTO paymentHistoryDTO = new PaymentHistoryDTO();
            paymentHistoryDTO.setMoney(paymentHistory.getMoney());
            PaymentMethodDTO paymentMethodDTO = new PaymentMethodDTO();
            PaymentMethod paymentMethod = paymentHistory.getPaymentMethod();
            paymentMethodDTO.setName(paymentMethod.getName());
            paymentHistoryDTO.setPaymentMethod(paymentMethodDTO);
            paymentHistoryDTO.setCreatedDate(paymentHistory.getCreatedDate());
            paymentHistoryDTO.setModifiedDate(paymentHistory.getModifiedDate());
            paymentHistoryDTO.setId(paymentHistory.getId());
            paymentHistoryDTOS.add(paymentHistoryDTO);
        }
        maintenanceCardDTO.setPaymentHistories(paymentHistoryDTOS);
        maintenanceCardDTO.setMaintenanceCardDetails(maintenanceCardDetailDTOS);
        return maintenanceCardDTO;
    }
}
=======

}
>>>>>>> dao
